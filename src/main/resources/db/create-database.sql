CREATE SCHEMA `usm`;

-- TABLE USERS --
CREATE  TABLE `usm`.`USERS` (
  `ID` BIGINT NOT NULL AUTO_INCREMENT ,
  `FIRST_NAME` VARCHAR(60) NOT NULL ,
  `LAST_NAME` VARCHAR(60) NOT NULL ,
  `EMAIL` VARCHAR(80) NOT NULL ,
  `BIRTH_DATE` DATE NOT NULL ,
  PRIMARY KEY (`ID`) ,
  INDEX `EMAIL_USERS_INDEX` (`EMAIL` ASC) );
  
-- TABLE SYSTEMS --
CREATE  TABLE `usm`.`SYSTEMS` (
  `ID` BIGINT NOT NULL AUTO_INCREMENT ,
  `CODE` VARCHAR(45) NOT NULL ,
  `NAME` VARCHAR(45) NOT NULL ,
  PRIMARY KEY (`ID`) ,
  UNIQUE INDEX `CODE_SYSTEMS_UNIQUE` (`CODE` ASC) ,
  UNIQUE INDEX `NAME_SYSTEMS_UNIQUE` (`NAME` ASC) );
  
-- TABLE OPTIONS --  
CREATE TABLE `usm`.`OPTIONS` (
  `ID` bigint(20) NOT NULL AUTO_INCREMENT,
  `NAME` varchar(60) NOT NULL,
  `ACCESS_TYPE_ENABLEDS` varchar(45) NOT NULL,
  `SYSTEM` bigint(20) NOT NULL,
  UNIQUE KEY `NAME_UNIQUE` (`NAME`),
  PRIMARY KEY (`ID`) ,
  KEY `FOREIGN_KEY_SYSTEM_OPTIONS_SYSTEM_IDX` (`SYSTEM`),
  CONSTRAINT `FOREIGN_KEY_OPTIONS_SYSTEM` FOREIGN KEY (`SYSTEM`) REFERENCES `systems` (`ID`) ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

-- TABLE PERMISSIONS --  
CREATE  TABLE `usm`.`PERMISSIONS` (
  `ID` BIGINT NULL AUTO_INCREMENT ,
  `OPTION` BIGINT NOT NULL ,
  `SYSTEM` BIGINT NOT NULL ,
  `ACCESSTYPE` VARCHAR(10) NOT NULL ,
  PRIMARY KEY (`ID`) ,
  INDEX `FOREIGN_KEY_PERMISSIONS_OPTION_IDX` (`OPTION` ASC) ,
  INDEX `FOREIGN_KEY_PERMISSIONS_SYSTEM_IDX` (`SYSTEM` ASC) ,
  CONSTRAINT `FOREIGN_KEY_PERMISSIONS_OPTION`
    FOREIGN KEY (`OPTION` )
    REFERENCES `usm`.`options` (`ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `FOREIGN_KEY_PERMISSIONS_SYSTEM`
    FOREIGN KEY (`SYSTEM` )
    REFERENCES `usm`.`systems` (`ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE);
    
-- TABLE ROLES --    
CREATE  TABLE `usm`.`ROLES` (
  `ID` BIGINT NOT NULL AUTO_INCREMENT ,
  `CODE` VARCHAR(45) NOT NULL ,
  `NAME` VARCHAR(60) NOT NULL ,
  `SYSTEM` BIGINT NOT NULL ,
  PRIMARY KEY (`ID`) ,
  INDEX `FOREIGN_KEY_ROLES_SYSTEM_IDX` (`SYSTEM` ASC) ,
  INDEX `FOREIGN_KEY_ROLES_CODE_IDX` (`CODE` ASC) ,
  CONSTRAINT `FOREIGN_KEY_ROLES_SYSTEM`
    FOREIGN KEY (`SYSTEM` )
    REFERENCES `usm`.`systems` (`ID` )
    ON DELETE CASCADE
    ON UPDATE CASCADE);
    
-- TABLE ACCOUNTS --   
CREATE  TABLE `usm`.`ACCOUNTS` (
  `ID` BIGINT NOT NULL AUTO_INCREMENT ,
  `NAME` VARCHAR(45) NOT NULL ,
  `PASSWORD` VARCHAR(45) NOT NULL ,
  `USER` BIGINT NOT NULL ,
  PRIMARY KEY (`ID`) ,
  INDEX `FOREIGN_KEY_ACCOUNTS_USER_IDX` (`USER` ASC) ,
  UNIQUE INDEX `NAME_UNIQUE` (`NAME` ASC) ,
  INDEX `FOREIGN_KEY_ACCOUNTS_NAME_IDX` (`NAME` ASC) ,
  CONSTRAINT `FOREIGN_KEY_ACCOUNTS_USER`
    FOREIGN KEY (`USER` )
    REFERENCES `usm`.`users` (`ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
    
-- TABLE RL_ACCOUNTS_PERMISSIONS --     
CREATE  TABLE `usm`.`RL_ACCOUNTS_PERMISSIONS` (
  `ACCOUNT` BIGINT NOT NULL ,
  `PERMISSION` BIGINT NOT NULL ,
  PRIMARY KEY (`ACCOUNT`, `PERMISSION`) ,
  INDEX `FOREIGN_KEY_RL_ACCOUNTS_PERMISSIONS_ACCOUNT_IDX` (`ACCOUNT` ASC) ,
  INDEX `FOREIGN_KEY_RL_ACCOUNTS_PERMISSIONS_PERMISSION_IDX` (`PERMISSION` ASC) ,
  CONSTRAINT `FOREIGN_KEY_RL_ACCOUNTS_PERMISSIONS_ACCOUNT`
    FOREIGN KEY (`ACCOUNT` )
    REFERENCES `usm`.`accounts` (`ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FOREIGN_KEY_RL_ACCOUNTS_PERMISSIONS_PERMISSION`
    FOREIGN KEY (`PERMISSION` )
    REFERENCES `usm`.`permissions` (`ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- TABLE RL_ACCOUNTS_ROLES --    
CREATE  TABLE `usm`.`RL_ACCOUNTS_ROLES` (
  `ACCOUNT` BIGINT NOT NULL ,
  `ROLE` BIGINT NOT NULL ,
  PRIMARY KEY (`ACCOUNT`, `ROLE`) ,
  INDEX `FOREIGN_KEYRL_ACCOUNTS_ROLES_ACCOUNT_IDX` (`ACCOUNT` ASC) ,
  INDEX `FOREIGN_KEY_RL_ACCOUNTS_ROLES_ROLE_IDX` (`ROLE` ASC) ,
  CONSTRAINT `FOREIGN_KEY_RL_ACCOUNTS_ROLES_ACCOUNT`
    FOREIGN KEY (`ACCOUNT` )
    REFERENCES `usm`.`accounts` (`ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FOREIGN_KEY_RL_ACCOUNTS_ROLES_ROLE`
    FOREIGN KEY (`ROLE` )
    REFERENCES `usm`.`roles` (`ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
    
-- TABLE RL_ROLES_PERMISSIONS --  
CREATE  TABLE `usm`.`RL_ROLES_PERMISSIONS` (
  `ROLE` BIGINT NOT NULL ,
  `PERMISSION` BIGINT NOT NULL ,
  PRIMARY KEY (`ROLE`, `PERMISSION`) ,
  INDEX `FOREIGN_KEY_RL_ROLES_PERMISSIONS_ROLE_IDX` (`ROLE` ASC) ,
  INDEX `FOREIGN_KEY_RL_ROLES_PERMISSIONS_PERMISSION_IDX` (`PERMISSION` ASC) ,
  CONSTRAINT `FOREIGN_KEY_RL_ROLES_PERMISSIONS_ROLE`
    FOREIGN KEY (`ROLE` )
    REFERENCES `usm`.`roles` (`ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FOREIGN_KEY_RL_ROLES_PERMISSIONS_PERMISSION`
    FOREIGN KEY (`PERMISSION` )
    REFERENCES `usm`.`permissions` (`ID` )
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
